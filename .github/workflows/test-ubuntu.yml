name: test-ubuntu

on:
  pull_request:
  push:
    branches:
      - main
    tags-ignore:
      - 'v*' # Don't run these tests twice when cutting a new version.

jobs:
  test-ubuntu:
    runs-on: "ubuntu-20.04"
    strategy:
      fail-fast: false
      matrix:
        python-version:
          - "3.8"
          - "3.9"
          - "3.10"

    services:
      postgres:
        image: postgres:9.5.25-alpine
        env:
          POSTGRES_USER: scalarstop
          POSTGRES_PASSWORD: changeme
          POSTGRES_DB: train_store
        ports:
          - "5432:5432"

    steps:
    - uses: actions/checkout@v2

    - uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install pip and poetry
      run: |
        python3 -m pip install --upgrade pip wheel poetry
        poetry config virtualenvs.in-project true

    - name: Cache the Poetry virtualenv
      uses: actions/cache@v2
      with:
        path: .venv
        key: ${{ runner.os }}-python-${{ matrix.python-version }}-poetry-${{ hashFiles('poetry.lock') }}
        restore-keys: |
          ${{ runner.os }}-python-${{ matrix.python-version }}-poetry-

    - name: Install the package
      run: make install

    - name: Check formatting (Python 3.8 only)
      if: matrix.python-version == '3.8'
      run: make fmt-check

    - name: Run lint (Python 3.8 only)
      if: matrix.python-version == '3.8'
      run: make lint

    - name: Run tests with PostgreSQL
      run: make test
      env:
        TRAIN_STORE_CONNECTION_STRING: "postgresql://scalarstop:changeme@localhost:5432/train_store"
